// üìå –î–∞–Ω –º–∞—Å—Å–∏–≤ nums = [3,2,2,3] –∏ —á–∏—Å–ª–æ val = 3.
// üìå –ï—Å–ª–∏ –≤ –º–∞—Å—Å–∏–≤–µ –µ—Å—Ç—å —á–∏—Å–ª–∞, —Ä–∞–≤–Ω—ã–µ –∑–∞–¥–∞–Ω–Ω–æ–º—É, –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏
// —ç—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –∫–æ–Ω–µ—Ü –º–∞—Å—Å–∏–≤–∞.
// üìå –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ (–∏–ª–∏ –≤—Å–µ) —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞
// –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ—Ç–ª–∏—á–Ω—ã –æ—Ç –∑–∞–¥–∞–Ω–Ω–æ–≥–æ, –∞ –æ—Å—Ç–∞–ª—å–Ω—ã–µ - —Ä–∞–≤–Ω—ã –µ–º—É.

package sem1;

public class Move_to_end {
    public static void main(String[] args) {
        int[] numbers = {1,2,3,3,3,5,6,7,8,9,65,4,3,2,4,65,76,7};
        int value = 7;
        int rigthIndex = numbers.length - 1;

        while(numbers[rigthIndex] == value) {
            rigthIndex--;
        }

        for (int left = 0; left < rigthIndex; left++) {
            if (numbers[left] == value) {
                int temp = numbers[left];
                numbers[left] = numbers[rigthIndex];
                numbers[rigthIndex] = temp;
                rigthIndex--;
            }
        }
        for (int elem : numbers) {
            System.out.print(elem + " ");
        }
    }
}
