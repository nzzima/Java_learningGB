// üìå –ó–∞–ø–æ–ª–Ω–∏—Ç—å —Å–ø–∏—Å–æ–∫ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –ø–ª–∞–Ω–µ—Ç –°–æ–ª–Ω–µ—á–Ω–æ–π
// —Å–∏—Å—Ç–µ–º—ã –≤ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ —Å –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è–º–∏.
// üìå –í—ã–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–∂–¥–æ–π –ø–ª–∞–Ω–µ—Ç—ã –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –µ–≥–æ
// –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π –≤ —Å–ø–∏—Å–∫–µ.

// –ó–∞–¥–∞–Ω–∏–µ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –¥–≤—É—Ö –±–ª–æ–∫–æ–≤

// –ó–∞–¥–∞–Ω–∏–µ ‚Ññ2.2 (–µ—Å–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –ø–µ—Ä–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ)
// üìå –ü—Ä–æ–π—Ç–∏ –ø–æ —Å–ø–∏—Å–∫—É –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è –∏ —É–¥–∞–ª–∏—Ç—å
// –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è —ç–ª–µ–º–µ–Ω—Ç—ã.

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Random;

public class solar_system {
    public static void main(String[] args) {
        List<String> planets = getPlanets(15);
        System.out.println(planets);
        count_ofRepeatedPlanets(planets);
        delete_RepeatedPlanets(planets);
        System.out.println(planets);
    }

    private static List<String> getPlanets(int size) {
        String[] plans = {"Mercury", "Venus", "Earth", "Mars", "Jupiter", "Uranus", "Neptune", "Pluto"};
        List<String> planets = new ArrayList<>(size);

        for (int i = 0; i < size; i++) {
            Random number = new Random();
            planets.add(plans[number.nextInt(plans.length)]);
        }
        return planets;
    }

    public static void count_ofRepeatedPlanets(List<String> planets) {
        List<String> newPlanets = new ArrayList<>(planets);
        Collections.sort(newPlanets);
        int count = 0;
        String temp = newPlanets.get(0);
        for (int i = 0; i < newPlanets.size(); i++) {
            if (newPlanets.get(i).equals(temp)) {
                count++;
            } else {
                System.out.println(temp + " " + count);
                count = 1;
                temp = newPlanets.get(i);
            }
        }
        System.out.println(temp + " " + count);
    }

    public static void delete_RepeatedPlanets(List<String> planets) {
        for (int i = 0; i < planets.size(); i++) {
            String temp = planets.get(i);
            for (int j = planets.size() - 1; j > i; j--) {
                if (planets.get(j).equals(temp)) {
                    planets.remove(j);
                } else continue;
            }
        }
    }
}