// üìå –ù–∞–ø–∏—à–∏—Ç–µ –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ —Å—Ç—Ä–æ–∫—É (String) –∏
// –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º (–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç
// boolean –∑–Ω–∞—á–µ–Ω–∏–µ).

package sem2;

public class isPolindrom {
    public static void main(String[] args) {
        String str = "abcdcba";

        // boolean checkPolindrom = false;
        // int count = 0;
        // for (int i = 0; i < str.length() / 2; i++) {
        //     if (str.charAt(i) == str.charAt(str.length() - i)) {
        //         count++;
        //     }
        //     else {
        //         System.out.println("Not a polindrom");
        //         break;
        //     }
        // }

        System.err.printf("IsPolindrom: %s\n", is_polindrom(str));
    }

    private static boolean is_polindrom(String str) {
        StringBuilder result = new StringBuilder(str.length());
        for (int i = str.length() - 1; i >= 0; i--) {
            result.append(str.charAt(i));
        }
        return str.equals(result.toString());
    }
}
